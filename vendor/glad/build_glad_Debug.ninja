# project build file
# generated with premake ninja

ninja_required_version = 1.6

# core rules for Debug
CFLAGS= -MD -MP -g -Iinclude
rule cc
  command = clang $CFLAGS -x c -MF $out.d -c -o $out $in
  description = cc $out
  depfile = $out.d
  deps = gcc

CXXFLAGS= -MD -MP -g -Iinclude
rule cxx
  command = clang++ $CXXFLAGS -x c++ -MF $out.d -c -o $out $in
  description = cxx $out
  depfile = $out.d
  deps = gcc

CFLAGS= -MD -MP -g -Iinclude
rule clangtidy_cc
  command = clang-tidy $in -- -x c $CFLAGS &&$
            clang $CFLAGS -x c -MF $out.d -c -o $out $in
  description = cc $out
  depfile = $out.d
  deps = gcc

CXXFLAGS= -MD -MP -g -Iinclude
rule clangtidy_cxx
  command = clang-tidy $in -- -x c++ $CFLAGS &&$
            clang++ $CXXFLAGS -x c++ -MF $out.d -c -o $out $in
  description = cxx $out
  depfile = $out.d
  deps = gcc

RESFLAGS = 
rule rc
  command = windres -i $in -o $out $RESFLAGS
  description = rc $out

rule ar
  command = ar rcs $out $in
  description = ar $out

rule copy
  command = cp -f $in $out
  description = copy $in $out

rule custom_command
  command = $CUSTOM_COMMAND
  description = $CUSTOM_DESCRIPTION

# build files
build build/Debug/obj/glad/glad.o: cc vendor/glad/src/glad.c

# link static lib
build build/Debug/lib/libglad.a: ar build/Debug/obj/glad/glad.o

build glad_Debug: phony build/Debug/lib/libglad.a
